[General]
%23preset_description=Cấu hình mẫu mặc định này thực hiện sinh và so kết quả test output giữa 2 bài làm
CLEAN_ROOT_FOLDER=true
FILENAME=BAI3
GENERATE_OUTPUT=true
INPUT_CODE="char c[] = {'(', ')', '[', ']'};\nvoid inputGen(ofstream& inp) {\n\tstring s;\n\tint n = randNum(1, 5);\n\tfor (int i = 1; i <= n; i++) {\n    \ts += c[randNum(0, 3)];\n\t}\n\tinp << s;\n}"
OUTPUT_CODE="#include <bits/stdc++.h>\n#define boostcode ios_base::sync_with_stdio(0); cin.tie(0);\n#define openf freopen(\"BAI3.INP\", \"r\", stdin); freopen(\"BAI3.OUT\", \"w\", stdout);\n\nusing namespace std;\ntypedef long long ll;\n\n// |s| <= 200\nstring s;\nint n;\nstring f[202][202];\n// f[i][j]: Xâu ngoặc đúng có độ dài min khi biến đổi xâu [i, j]\n\nint main() {\n    boostcode;\n    openf;\n\n    cin >> s;\n    n = s.size();\n    // Với xâu độ dài 1:\n    for (int i = 0; i < n; i++) {\n        if (s[i]=='(' || s[i]==')') f[i][i] = \"()\";\n        if (s[i]=='[' || s[i]==']') f[i][i] = \"[]\";\n    }\n    // Với xâu độ dài len = 2 -> n:\n    for (int len = 2; len <= n; len++) {\n        for (int i = 0; i+len-1 < n; i++) {\n            int j = i+len-1;\n            f[i][j] = \"\";\n            // TH nếu 2 ngoặc hợp lệ:\n            if ((s[i]=='(' && s[j]==')') ||\n                (s[i]=='[' && s[j]==']')) {\n                f[i][j] = s[i] + f[i+1][j-1] + s[j];\n            }\n            // Kiểm tra và update tiếp để tìm thêm min:\n            for (int k = i; k < j; k++) {\n                string temp = f[i][k] + f[k+1][j];\n                if (f[i][j].empty() || temp.size()<f[i][j].size()) {\n                    f[i][j] = temp;\n                }\n            }\n        }\n    }\n    cout << f[0][n-1];\n\n    return 0;\n}\n/* Test:\n([(]\n=> ()[()]\n([[((())())]()])[]\n=> ([[((())())]()])[]\n*/"
OVERWRITE_OLD_TESTS=true
PREVENT_IDENTICAL_TESTS=false
SEPERATE_EACH_TEST=true
SHOW_COMPARE_ON_CMD=false
STRESS_TEST=true
STRESS_TEST_FORCE_STOP=true
STRESS_TEST_KEEP_WA_TEST_ONLY=false
STRESS_TEST_MOVE_WA_OUTPUT_TO_DIRECTORY=true
STRESS_TEST_SOLUTIONS="@Variant(\0\0\0\t\0\0\0\x1\0\0\0\x7f\0\0\0\x1bstd::pair<QString,QString>\0\0\0\0\b\0t\0\x65\0s\0t\0\0\n\x14\0#\0i\0n\0\x63\0l\0u\0\x64\0\x65\0 \0<\0\x62\0i\0t\0s\0/\0s\0t\0\x64\0\x63\0+\0+\0.\0h\0>\0\n\0#\0\x64\0\x65\0\x66\0i\0n\0\x65\0 \0\x62\0o\0o\0s\0t\0\x63\0o\0\x64\0\x65\0 \0i\0o\0s\0_\0\x62\0\x61\0s\0\x65\0:\0:\0s\0y\0n\0\x63\0_\0w\0i\0t\0h\0_\0s\0t\0\x64\0i\0o\0(\0\x30\0)\0;\0 \0\x63\0i\0n\0.\0t\0i\0\x65\0(\0\x30\0)\0;\0\n\0#\0\x64\0\x65\0\x66\0i\0n\0\x65\0 \0o\0p\0\x65\0n\0\x66\0 \0\x66\0r\0\x65\0o\0p\0\x65\0n\0(\0\"\0\x42\0\x41\0I\0\x33\0.\0i\0n\0p\0\"\0,\0 \0\"\0r\0\"\0,\0 \0s\0t\0\x64\0i\0n\0)\0;\0 \0\x66\0r\0\x65\0o\0p\0\x65\0n\0(\0\"\0\x42\0\x41\0I\0\x33\0.\0\x61\0n\0s\0\"\0,\0 \0\"\0w\0\"\0,\0 \0s\0t\0\x64\0o\0u\0t\0)\0;\0\n\0\n\0/\0/\0 \0N\0g\0u\x1e\xd3\0n\0:\0 \0h\0t\0t\0p\0s\0:\0/\0/\0o\0j\0.\0v\0n\0o\0i\0.\0i\0n\0\x66\0o\0/\0p\0r\0o\0\x62\0l\0\x65\0m\0/\0v\0o\0\x62\0r\0\x61\0\x63\0k\0\n\0\n\0u\0s\0i\0n\0g\0 \0n\0\x61\0m\0\x65\0s\0p\0\x61\0\x63\0\x65\0 \0s\0t\0\x64\0;\0\n\0t\0y\0p\0\x65\0\x64\0\x65\0\x66\0 \0l\0o\0n\0g\0 \0l\0o\0n\0g\0 \0l\0l\0;\0\n\0\n\0s\0t\0r\0i\0n\0g\0 \0s\0;\0\n\0i\0n\0t\0 \0n\0;\0\n\0s\0t\0\x61\0\x63\0k\0<\0i\0n\0t\0>\0 \0s\0t\0;\0 \0/\0/\0 \0L\x1\xb0\0u\0 \0\x63\0\xe1\0\x63\0 \0\x64\x1e\xa5\0u\0 \0n\0g\0o\x1e\xb7\0\x63\0 \0m\x1e\xdf\0 \0(\0\x63\0h\x1\xb0\0\x61\0 \x1\x11\x1\xb0\x1e\xe3\0\x63\0 \x1\x11\0\xf3\0n\0g\0)\0\n\0s\0t\0r\0i\0n\0g\0 \0\x64\0p\0[\0\x32\0\x30\0\x32\0]\0[\0\x32\0\x30\0\x32\0]\0;\0\n\0i\0n\0t\0 \0r\0\x65\0s\0;\0\n\0\n\0i\0n\0t\0 \0m\0\x61\0i\0n\0(\0)\0 \0{\0\n\0 \0 \0 \0 \0\x62\0o\0o\0s\0t\0\x63\0o\0\x64\0\x65\0;\0\n\0 \0 \0 \0 \0o\0p\0\x65\0n\0\x66\0;\0\n\0\n\0 \0 \0 \0 \0\x63\0i\0n\0 \0>\0>\0 \0s\0;\0\n\0 \0 \0 \0 \0n\0 \0=\0 \0s\0.\0s\0i\0z\0\x65\0(\0)\0;\0\n\0 \0 \0 \0 \0\x66\0o\0r\0 \0(\0i\0n\0t\0 \0i\0 \0=\0 \0\x30\0;\0 \0i\0 \0<\0 \0n\0;\0 \0i\0+\0+\0)\0 \0{\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0i\0\x66\0 \0(\0s\0[\0i\0]\0=\0=\0'\0(\0'\0 \0|\0|\0 \0s\0[\0i\0]\0=\0=\0'\0)\0'\0)\0 \0\x64\0p\0[\0i\0]\0[\0i\0]\0 \0=\0 \0\"\0(\0)\0\"\0;\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0\x65\0l\0s\0\x65\0 \0\x64\0p\0[\0i\0]\0[\0i\0]\0 \0=\0 \0\"\0[\0]\0\"\0;\0\n\0 \0 \0 \0 \0}\0\n\0 \0 \0 \0 \0\x66\0o\0r\0 \0(\0i\0n\0t\0 \0l\0\x65\0n\0 \0=\0 \0\x32\0;\0 \0l\0\x65\0n\0 \0<\0=\0 \0n\0;\0 \0l\0\x65\0n\0+\0+\0)\0 \0{\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0\x66\0o\0r\0 \0(\0i\0n\0t\0 \0i\0 \0=\0 \0\x30\0;\0 \0i\0+\0l\0\x65\0n\0-\0\x31\0 \0<\0 \0n\0;\0 \0i\0+\0+\0)\0 \0{\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0i\0n\0t\0 \0j\0 \0=\0 \0i\0+\0l\0\x65\0n\0-\0\x31\0;\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0i\0\x66\0 \0(\0(\0s\0[\0i\0]\0=\0=\0'\0(\0'\0 \0&\0&\0 \0s\0[\0j\0]\0=\0=\0'\0)\0'\0)\0 \0|\0|\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0(\0s\0[\0i\0]\0=\0=\0'\0[\0'\0 \0&\0&\0 \0s\0[\0j\0]\0=\0=\0'\0]\0'\0)\0)\0 \0{\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x64\0p\0[\0i\0]\0[\0j\0]\0 \0=\0 \0s\0[\0i\0]\0 \0+\0 \0\x64\0p\0[\0i\0+\0\x31\0]\0[\0j\0-\0\x31\0]\0 \0+\0 \0s\0[\0j\0]\0;\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x63\0o\0n\0t\0i\0n\0u\0\x65\0;\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0}\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x64\0p\0[\0i\0]\0[\0j\0]\0 \0=\0 \0\"\0\"\0;\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x66\0o\0r\0 \0(\0i\0n\0t\0 \0k\0 \0=\0 \0i\0;\0 \0k\0 \0<\0 \0j\0;\0 \0k\0+\0+\0)\0 \0{\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0i\0\x66\0 \0(\0\x64\0p\0[\0i\0]\0[\0j\0]\0.\0\x65\0m\0p\0t\0y\0(\0)\0 \0|\0|\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x64\0p\0[\0i\0]\0[\0k\0]\0.\0s\0i\0z\0\x65\0(\0)\0+\0\x64\0p\0[\0k\0+\0\x31\0]\0[\0j\0]\0.\0s\0i\0z\0\x65\0(\0)\0<\0\x64\0p\0[\0i\0]\0[\0j\0]\0.\0s\0i\0z\0\x65\0(\0)\0)\0 \0{\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0\x64\0p\0[\0i\0]\0[\0j\0]\0 \0=\0 \0\x64\0p\0[\0i\0]\0[\0k\0]\0 \0+\0 \0\x64\0p\0[\0k\0+\0\x31\0]\0[\0j\0]\0;\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0}\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0}\0\n\0 \0 \0 \0 \0 \0 \0 \0 \0}\0\n\0 \0 \0 \0 \0}\0\n\0 \0 \0 \0 \0/\0/\0\x63\0o\0u\0t\0 \0<\0<\0 \0\x64\0p\0[\0\x30\0]\0[\0n\0-\0\x31\0]\0.\0s\0i\0z\0\x65\0(\0)\0-\0n\0 \0<\0<\0 \0'\0\\\0n\0'\0;\0\n\0 \0 \0 \0 \0\x63\0o\0u\0t\0 \0<\0<\0 \0\x64\0p\0[\0\x30\0]\0[\0n\0-\0\x31\0]\0;\0\n\0\n\0 \0 \0 \0 \0r\0\x65\0t\0u\0r\0n\0 \0\x30\0;\0\n\0}\0\n\0/\0/\0 \0T\0\x65\0s\0t\0:\0\n\0/\0*\0\n\0[\0(\0(\0)\0)\0)\0\n\0=\0>\0 \0o\0u\0t\0p\0u\0t\0:\0 \0\x32\0\n\0\x41\0n\0o\0t\0h\0\x65\0r\0 \0t\0\x65\0s\0t\0:\0\n\0[\0(\0[\0)\0]\0\n\0=\0>\0 \0o\0u\0t\0p\0u\0t\0:\0 \0\x31\0\n\0*\0/)"
STRESS_TEST_WRITE_REPORT=true
subtasks=@Variant(\0\0\0\t\0\0\0\x1\0\0\0\x7f\0\0\0\bSubtask\0\0\0\0\x16\0S\0u\0\x62\0t\0\x61\0s\0k\0 \0n\0h\x1e\xcf\0\0\0\x1\0\0'\xf\0\0\0\0)
